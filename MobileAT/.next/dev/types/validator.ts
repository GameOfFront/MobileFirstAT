// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../../app/Home/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Home">> = Specific
  const handler = {} as typeof import("../../../app/Home/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa1/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa1">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa1/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa10/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa10">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa10/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa11/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa11">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa11/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa12/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa12">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa12/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa13/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa13">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa13/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa2/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa2">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa2/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa3/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa3">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa3/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa4/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa4">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa4/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa5/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa5">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa5/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa6/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa6">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa6/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa7/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa7">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa7/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa8/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa8">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa8/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/Tarefa9/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Tarefa9">> = Specific
  const handler = {} as typeof import("../../../app/Tarefa9/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
