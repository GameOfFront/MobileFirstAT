{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Infnet/MobileFirstAT/MobileAT/app/Tarefa13/data/questoes.ts"],"sourcesContent":["// ===== Tipagem e lista de questões =====\r\nexport interface Question {\r\n  id: number;\r\n  enunciado: string;\r\n  opcoes: string[];\r\n  correta: number;\r\n  justificativa: string;\r\n}\r\n\r\nexport const questions: Question[] = [\r\n  {\r\n    id: 1,\r\n    enunciado: \"O que significa o conceito 'Mobile-First' no design responsivo?\",\r\n    opcoes: [\r\n      \"Criar primeiro para desktop e depois adaptar para mobile.\",\r\n      \"Projetar primeiro para dispositivos móveis e depois expandir para telas maiores.\",\r\n      \"Usar apenas tecnologias nativas de mobile.\",\r\n      \"Focar apenas em performance no celular.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Mobile-First significa iniciar o design e desenvolvimento priorizando dispositivos móveis, garantindo boa experiência em telas pequenas antes de expandir para desktops.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    enunciado:\r\n      \"Qual unidade de medida é mais recomendada para layouts responsivos?\",\r\n    opcoes: [\"px\", \"em\", \"rem\", \"vh/vw\"],\r\n    correta: 3,\r\n    justificativa:\r\n      \"As unidades relativas como 'vh' (viewport height) e 'vw' (viewport width) se adaptam ao tamanho da tela, tornando o layout responsivo.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    enunciado: \"Qual princípio está diretamente ligado à usabilidade?\",\r\n    opcoes: [\r\n      \"A estética do design deve ser mais importante que a clareza.\",\r\n      \"O usuário deve atingir seus objetivos de forma eficiente e intuitiva.\",\r\n      \"As cores devem ser sempre vibrantes.\",\r\n      \"A interface deve ter o máximo de elementos possível.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Usabilidade refere-se à facilidade com que o usuário realiza tarefas e entende o sistema de forma clara e intuitiva.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    enunciado:\r\n      \"Qual abordagem melhora o desempenho e a experiência do usuário em mobile?\",\r\n    opcoes: [\r\n      \"Carregar todas as imagens em alta resolução de uma vez.\",\r\n      \"Usar lazy loading para imagens e componentes.\",\r\n      \"Usar apenas imagens grandes e redimensionar via CSS.\",\r\n      \"Remover cache do navegador para evitar repetição de dados.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"O lazy loading carrega imagens e componentes apenas quando são necessários, otimizando a performance especialmente em dispositivos móveis.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    enunciado: \"O que é design responsivo?\",\r\n    opcoes: [\r\n      \"Um design que muda de cor conforme o tema do usuário.\",\r\n      \"Um design que se adapta a diferentes tamanhos e orientações de tela.\",\r\n      \"Um design feito exclusivamente para celulares.\",\r\n      \"Um design que responde a cliques do usuário.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Design responsivo adapta automaticamente o layout e os elementos visuais para se ajustarem a diferentes tamanhos e orientações de tela.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    enunciado:\r\n      \"Em um layout Mobile-First, o que acontece ao aumentar o tamanho da tela?\",\r\n    opcoes: [\r\n      \"Nada, o design é fixo para mobile.\",\r\n      \"As regras CSS adicionam estilos para telas maiores usando media queries.\",\r\n      \"O design se torna automaticamente um app desktop.\",\r\n      \"A interface se desorganiza para caber mais conteúdo.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"No Mobile-First, estilos básicos são definidos para telas pequenas e, com media queries, são adicionados estilos para telas maiores.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    enunciado: \"Qual propriedade CSS é comumente usada em layouts responsivos?\",\r\n    opcoes: [\"position: absolute;\", \"float: left;\", \"display: flex;\", \"z-index\"],\r\n    correta: 2,\r\n    justificativa:\r\n      \"O Flexbox facilita a criação de layouts flexíveis e adaptáveis, sendo amplamente usado em design responsivo.\",\r\n  },\r\n  {\r\n    id: 8,\r\n    enunciado:\r\n      \"O que é acessibilidade no contexto da usabilidade de um site ou app?\",\r\n    opcoes: [\r\n      \"Um recurso para deixar o site mais bonito.\",\r\n      \"Garantir que qualquer pessoa, incluindo pessoas com deficiência, possa usar o sistema.\",\r\n      \"Apenas o uso de teclados especiais para navegação.\",\r\n      \"Usar contraste de cores apenas em dark mode.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Acessibilidade garante que pessoas com diferentes necessidades (visuais, motoras, cognitivas) consigam utilizar o sistema com eficiência.\",\r\n  },\r\n  {\r\n    id: 9,\r\n    enunciado:\r\n      \"Qual a melhor prática ao projetar botões para telas sensíveis ao toque?\",\r\n    opcoes: [\r\n      \"Usar botões pequenos para economizar espaço.\",\r\n      \"Usar áreas clicáveis grandes e bem espaçadas.\",\r\n      \"Evitar ícones e usar apenas texto.\",\r\n      \"Usar cor neutra para todos os botões.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Em dispositivos móveis, os botões devem ter áreas clicáveis amplas e bem espaçadas para evitar erros de toque e melhorar a usabilidade.\",\r\n  },\r\n  {\r\n    id: 10,\r\n    enunciado:\r\n      \"Por que é importante testar o design em múltiplos dispositivos?\",\r\n    opcoes: [\r\n      \"Para verificar se o site carrega rápido apenas em um modelo de celular.\",\r\n      \"Para garantir compatibilidade e boa experiência em diferentes telas e navegadores.\",\r\n      \"Apenas por motivos estéticos.\",\r\n      \"Para diminuir o número de usuários no site.\",\r\n    ],\r\n    correta: 1,\r\n    justificativa:\r\n      \"Testar o design em múltiplos dispositivos assegura que o layout e as interações funcionem corretamente em diferentes tamanhos de tela e sistemas.\",\r\n  },\r\n];\r\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;AASnC,MAAM,YAAwB;IACnC;QACE,IAAI;QACJ,WAAW;QACX,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YAAC;YAAM;YAAM;YAAO;SAAQ;QACpC,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WAAW;QACX,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WAAW;QACX,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WAAW;QACX,QAAQ;YAAC;YAAuB;YAAgB;YAAkB;SAAU;QAC5E,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;IACA;QACE,IAAI;QACJ,WACE;QACF,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,SAAS;QACT,eACE;IACJ;CACD","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Infnet/MobileFirstAT/MobileAT/app/Tarefa13/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Stack,\r\n  Divider,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { questions } from \"./data/questoes\";\r\n\r\n\r\nexport default function Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const question = questions[currentQuestion];\r\n  const isLandscape = useMediaQuery(\"(orientation: landscape)\");\r\n\r\n  const handleAnswer = () => {\r\n    if (selectedOption === null) return;\r\n    setIsAnswered(true);\r\n    if (selectedOption === question.correta) {\r\n      setScore((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\nconst handleNext = () => {\r\n  setIsAnswered(false);\r\n  setSelectedOption(null);\r\n\r\n  if (currentQuestion < questions.length - 1) {\r\n    setCurrentQuestion((prev) => prev + 1);\r\n  } else {\r\n    // Exibe a pontuação final\r\n    alert(`Quiz finalizado! Sua pontuação: ${score}/${questions.length}`);\r\n\r\n    // Reinicia o quiz\r\n    setTimeout(() => {\r\n      setCurrentQuestion(0);\r\n      setScore(0);\r\n      setSelectedOption(null);\r\n      setIsAnswered(false);\r\n    }, 300);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      sx={{\r\n        p: 3,\r\n        maxWidth: 600,\r\n        mx: \"auto\",\r\n        mt: 4,\r\n        borderRadius: 3,\r\n        display: \"flex\",\r\n        flexDirection: isLandscape ? \"row\" : \"column\",\r\n        alignItems: \"stretch\",\r\n        gap: 3,\r\n      }}\r\n    >\r\n      <Stack spacing={2} flex={1}>\r\n        <Typography variant=\"h6\" fontWeight=\"bold\">\r\n          {question.enunciado}\r\n        </Typography>\r\n\r\n        {question.opcoes.map((opcao, index) => {\r\n          const isSelected = selectedOption === index;\r\n          const isCorrect = question.correta === index;\r\n\r\n          let bgColor = \"background.paper\";\r\n          if (isAnswered && isCorrect) bgColor = \"success.light\";\r\n          else if (isAnswered && isSelected && !isCorrect)\r\n            bgColor = \"error.light\";\r\n          else if (isSelected) bgColor = \"action.selected\";\r\n\r\n          return (\r\n            <Box\r\n              key={index}\r\n              onClick={() => !isAnswered && setSelectedOption(index)}\r\n              sx={{\r\n                p: 1.5,\r\n                borderRadius: 2,\r\n                border: \"1px solid\",\r\n                borderColor: \"divider\",\r\n                cursor: isAnswered ? \"default\" : \"pointer\",\r\n                backgroundColor: bgColor,\r\n                transition: \"0.3s\",\r\n                \"&:hover\": {\r\n                  backgroundColor: isAnswered ? bgColor : \"action.hover\",\r\n                },\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\">{opcao}</Typography>\r\n            </Box>\r\n          );\r\n        })}\r\n\r\n        {!isAnswered ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleAnswer}\r\n            disabled={selectedOption === null}\r\n          >\r\n            Verificar Resposta\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Divider sx={{ my: 1 }} />\r\n            {selectedOption === question.correta ? (\r\n              <Typography color=\"success.main\" fontWeight=\"bold\">\r\n                ✅ Acertou! +1 ponto\r\n              </Typography>\r\n            ) : (\r\n              <Typography color=\"error.main\" fontWeight=\"bold\">\r\n                ❌ Errou! Resposta correta:{\" \"}\r\n                {question.opcoes[question.correta]}\r\n              </Typography>\r\n            )}\r\n\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              {question.justificativa}\r\n            </Typography>\r\n\r\n            <Button variant=\"outlined\" onClick={handleNext} sx={{ mt: 2 }}>\r\n              Próxima Pergunta\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Stack>\r\n\r\n      {/* Painel lateral (landscape) */}\r\n      {isLandscape && (\r\n        <Box\r\n          sx={{\r\n            minWidth: 160,\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            gap: 1,\r\n            borderLeft: \"1px solid\",\r\n            borderColor: \"divider\",\r\n            pl: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n            Pontos: {score}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Questão {currentQuestion + 1} de {questions.length}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}